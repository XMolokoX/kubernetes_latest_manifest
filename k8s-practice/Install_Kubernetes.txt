#Disable the SELinux
setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

#Change the Linux host bridge values
echo -e "net.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
sysctl --system

#Disable swap
sed -i '/swap/d' /etc/fstab
swapoff -a

#Restart 
init 6

#edit host 
IPADDR=$(hostname -I | awk '{print $1}')
echo -e "$IPADDR  manager" >> /etc/hosts
echo -e "$IPADDRWK  worker" >> /etc/hosts

#create kuber repository ( if have issue when install kubeadm , please update enabled & gpgcheck to 0 ) 
cat <<EOL > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
       https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOL

#Install docker & kuber
yum install -y kubeadm docker
systemctl enable docker && systemctl enable kubelet
systemctl start docker

#Stop firewall or open port
#systemctl stop firewalld 
sudo firewall-cmd --permanent --add-port=6443/tcp
sudo firewall-cmd --permanent --add-port=2379-2380/tcp
sudo firewall-cmd --permanent --add-port=10250/tcp
sudo firewall-cmd --permanent --add-port=10251/tcp
sudo firewall-cmd --permanent --add-port=10252/tcp
sudo firewall-cmd --permanent --add-port=10255/tcp
sudo firewall-cmd --reload

#init kuber ( Ip-pod = 10.13.0.0/16 )
kubeadm init --apiserver-advertise-address=<IP-master> --pod-network-cidr=<Ip-pod>
###After done will have command to join node 

#create token to join cluster
kubeadm token create --print-join-command

#start kuber
systemctl start kubelet

#Run command before start kuber
mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config

#show logs failure
journalctl -xeu kubelet

#show node
kubectl get nodes

#list the available system PODS
kubectl get pods --all-namespaces

#installing network
kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml

#detail pod 
kubectl describe pod <pod name> --namespace=kube-system

#meet issue when excute on 1 node
kubectl taint nodes <node-name> node-role.kubernetes.io/master-
or 
kubectl taint nodes --all node-role.kubernetes.io/control-plane-