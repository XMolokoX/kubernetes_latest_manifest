apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nameapi }}
  labels:
    {{- include "test.label" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "test.label" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "test.label" . | indent 8 }}
    spec:
      containers:
      - name: {{ .Values.nameapi }}
        image: {{ .Values.image }}/be:latest
        imagePullPolicy: Always
        ports:
        - name: {{ .Values.nameapi }}
          containerPort: {{ .Values.targetportapi }}
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: {{ .Values.targetportapi }}
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.targetportapi }}
          initialDelaySeconds: 30
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: ife-config
      - name: postgres
        image: postgres:10.1
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: {{ .Values.portpost }}
        envFrom:
        - configMapRef:
            name: postgres-config
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
            name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0